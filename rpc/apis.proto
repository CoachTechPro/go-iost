syntax = "proto3";

import "core/tx/tx.proto";
import "core/block/block.proto";
import "core/event/event.proto";
package rpc;

service Apis {
	rpc GetHeight (VoidReq) returns (HeightRes) {}
	rpc GetTxByHash (HashReq) returns (tx.TxRaw) {}
	rpc GetBlockByHash (BlockByHashReq) returns (BlockInfo) {}
	rpc getBlockByNum (BlockByNumReq) returns (BlockInfo) {}
    rpc GetBalance (GetBalanceReq) returns (GetBalanceRes) {}
    rpc GetState (GetStateReq) returns (GetStateRes) {}
    rpc SendRawTx (RawTxReq) returns (SendRawTxRes) {}
    rpc EstimateGas (RawTxReq) returns (GasRes) {}
    rpc Subscribe (SubscribeReq) returns (stream SubscribeRes) {}
}

message VoidReq {

}

message HashReq {
	bytes hash=1;
}
message BlockByHashReq {
	bytes hash=1;
	bool complete=2;
}
message BlockByNumReq {
	int64 num=1;
	bool complete=2;	
}
message GetBalanceReq {
	string ID=1;
}

message GetStateReq {
	string key=1;
}

message RawTxReq {
	bytes data=1;
}

message SubscribeReq {
    repeated event.Event.Topic topics=1;
}

message HeightRes {
	int64 height=1;
}

message GetBalanceRes {
	int64 balance=1;
}

message GetStateRes {
	string value=1;
}

message SendRawTxRes {
	bytes hash=1;
}

message GasRes {
	uint64 gas=1;
}

message BlockInfo {
    block.BlockHead head = 1;
    repeated tx.TxRaw txs = 2;
	repeated bytes txhash=3;  
}

message SubscribeRes {
    event.Event ev=1;
}
