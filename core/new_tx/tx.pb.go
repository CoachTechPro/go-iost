// Code generated by protoc-gen-go. DO NOT EDIT.
// source: core/new_tx/tx.proto

package tx

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "common"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ActionRaw struct {
	Contract             string   `protobuf:"bytes,1,opt,name=contract,proto3" json:"contract,omitempty"`
	ActionName           string   `protobuf:"bytes,2,opt,name=actionName,proto3" json:"actionName,omitempty"`
	Data                 string   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ActionRaw) Reset()         { *m = ActionRaw{} }
func (m *ActionRaw) String() string { return proto.CompactTextString(m) }
func (*ActionRaw) ProtoMessage()    {}
func (*ActionRaw) Descriptor() ([]byte, []int) {
	return fileDescriptor_tx_bc5ec082003f8a26, []int{0}
}
func (m *ActionRaw) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ActionRaw.Unmarshal(m, b)
}
func (m *ActionRaw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ActionRaw.Marshal(b, m, deterministic)
}
func (dst *ActionRaw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ActionRaw.Merge(dst, src)
}
func (m *ActionRaw) XXX_Size() int {
	return xxx_messageInfo_ActionRaw.Size(m)
}
func (m *ActionRaw) XXX_DiscardUnknown() {
	xxx_messageInfo_ActionRaw.DiscardUnknown(m)
}

var xxx_messageInfo_ActionRaw proto.InternalMessageInfo

func (m *ActionRaw) GetContract() string {
	if m != nil {
		return m.Contract
	}
	return ""
}

func (m *ActionRaw) GetActionName() string {
	if m != nil {
		return m.ActionName
	}
	return ""
}

func (m *ActionRaw) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type TransactionRaw struct {
	Id                   string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Time                 int64                  `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	Actions              []*ActionRaw           `protobuf:"bytes,3,rep,name=actions,proto3" json:"actions,omitempty"`
	Signers              [][]byte               `protobuf:"bytes,4,rep,name=signers,proto3" json:"signers,omitempty"`
	Signs                []*common.SignatureRaw `protobuf:"bytes,5,rep,name=signs,proto3" json:"signs,omitempty"`
	Publisher            *common.SignatureRaw   `protobuf:"bytes,6,opt,name=publisher,proto3" json:"publisher,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *TransactionRaw) Reset()         { *m = TransactionRaw{} }
func (m *TransactionRaw) String() string { return proto.CompactTextString(m) }
func (*TransactionRaw) ProtoMessage()    {}
func (*TransactionRaw) Descriptor() ([]byte, []int) {
	return fileDescriptor_tx_bc5ec082003f8a26, []int{1}
}
func (m *TransactionRaw) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransactionRaw.Unmarshal(m, b)
}
func (m *TransactionRaw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransactionRaw.Marshal(b, m, deterministic)
}
func (dst *TransactionRaw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransactionRaw.Merge(dst, src)
}
func (m *TransactionRaw) XXX_Size() int {
	return xxx_messageInfo_TransactionRaw.Size(m)
}
func (m *TransactionRaw) XXX_DiscardUnknown() {
	xxx_messageInfo_TransactionRaw.DiscardUnknown(m)
}

var xxx_messageInfo_TransactionRaw proto.InternalMessageInfo

func (m *TransactionRaw) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TransactionRaw) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *TransactionRaw) GetActions() []*ActionRaw {
	if m != nil {
		return m.Actions
	}
	return nil
}

func (m *TransactionRaw) GetSigners() [][]byte {
	if m != nil {
		return m.Signers
	}
	return nil
}

func (m *TransactionRaw) GetSigns() []*common.SignatureRaw {
	if m != nil {
		return m.Signs
	}
	return nil
}

func (m *TransactionRaw) GetPublisher() *common.SignatureRaw {
	if m != nil {
		return m.Publisher
	}
	return nil
}

type ReceiptRaw struct {
	Type                 int32    `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"`
	Content              string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReceiptRaw) Reset()         { *m = ReceiptRaw{} }
func (m *ReceiptRaw) String() string { return proto.CompactTextString(m) }
func (*ReceiptRaw) ProtoMessage()    {}
func (*ReceiptRaw) Descriptor() ([]byte, []int) {
	return fileDescriptor_tx_bc5ec082003f8a26, []int{2}
}
func (m *ReceiptRaw) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiptRaw.Unmarshal(m, b)
}
func (m *ReceiptRaw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiptRaw.Marshal(b, m, deterministic)
}
func (dst *ReceiptRaw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiptRaw.Merge(dst, src)
}
func (m *ReceiptRaw) XXX_Size() int {
	return xxx_messageInfo_ReceiptRaw.Size(m)
}
func (m *ReceiptRaw) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiptRaw.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiptRaw proto.InternalMessageInfo

func (m *ReceiptRaw) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ReceiptRaw) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type StatusRaw struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StatusRaw) Reset()         { *m = StatusRaw{} }
func (m *StatusRaw) String() string { return proto.CompactTextString(m) }
func (*StatusRaw) ProtoMessage()    {}
func (*StatusRaw) Descriptor() ([]byte, []int) {
	return fileDescriptor_tx_bc5ec082003f8a26, []int{3}
}
func (m *StatusRaw) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusRaw.Unmarshal(m, b)
}
func (m *StatusRaw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusRaw.Marshal(b, m, deterministic)
}
func (dst *StatusRaw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusRaw.Merge(dst, src)
}
func (m *StatusRaw) XXX_Size() int {
	return xxx_messageInfo_StatusRaw.Size(m)
}
func (m *StatusRaw) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusRaw.DiscardUnknown(m)
}

var xxx_messageInfo_StatusRaw proto.InternalMessageInfo

func (m *StatusRaw) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *StatusRaw) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type TxReceiptRaw struct {
	TxHash               []byte        `protobuf:"bytes,1,opt,name=txHash,proto3" json:"txHash,omitempty"`
	GasUsage             uint64        `protobuf:"varint,2,opt,name=gasUsage,proto3" json:"gasUsage,omitempty"`
	Status               *StatusRaw    `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	SuccActionNum        int32         `protobuf:"varint,4,opt,name=succActionNum,proto3" json:"succActionNum,omitempty"`
	Receipts             []*ReceiptRaw `protobuf:"bytes,5,rep,name=receipts,proto3" json:"receipts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *TxReceiptRaw) Reset()         { *m = TxReceiptRaw{} }
func (m *TxReceiptRaw) String() string { return proto.CompactTextString(m) }
func (*TxReceiptRaw) ProtoMessage()    {}
func (*TxReceiptRaw) Descriptor() ([]byte, []int) {
	return fileDescriptor_tx_bc5ec082003f8a26, []int{4}
}
func (m *TxReceiptRaw) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TxReceiptRaw.Unmarshal(m, b)
}
func (m *TxReceiptRaw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TxReceiptRaw.Marshal(b, m, deterministic)
}
func (dst *TxReceiptRaw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TxReceiptRaw.Merge(dst, src)
}
func (m *TxReceiptRaw) XXX_Size() int {
	return xxx_messageInfo_TxReceiptRaw.Size(m)
}
func (m *TxReceiptRaw) XXX_DiscardUnknown() {
	xxx_messageInfo_TxReceiptRaw.DiscardUnknown(m)
}

var xxx_messageInfo_TxReceiptRaw proto.InternalMessageInfo

func (m *TxReceiptRaw) GetTxHash() []byte {
	if m != nil {
		return m.TxHash
	}
	return nil
}

func (m *TxReceiptRaw) GetGasUsage() uint64 {
	if m != nil {
		return m.GasUsage
	}
	return 0
}

func (m *TxReceiptRaw) GetStatus() *StatusRaw {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *TxReceiptRaw) GetSuccActionNum() int32 {
	if m != nil {
		return m.SuccActionNum
	}
	return 0
}

func (m *TxReceiptRaw) GetReceipts() []*ReceiptRaw {
	if m != nil {
		return m.Receipts
	}
	return nil
}

func init() {
	proto.RegisterType((*ActionRaw)(nil), "tx.ActionRaw")
	proto.RegisterType((*TransactionRaw)(nil), "tx.TransactionRaw")
	proto.RegisterType((*ReceiptRaw)(nil), "tx.ReceiptRaw")
	proto.RegisterType((*StatusRaw)(nil), "tx.StatusRaw")
	proto.RegisterType((*TxReceiptRaw)(nil), "tx.TxReceiptRaw")
}

func init() { proto.RegisterFile("core/new_tx/tx.proto", fileDescriptor_tx_bc5ec082003f8a26) }

var fileDescriptor_tx_bc5ec082003f8a26 = []byte{
	// 384 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x52, 0x3d, 0x6f, 0xd5, 0x30,
	0x14, 0x55, 0x3e, 0x5e, 0xda, 0x5c, 0x5e, 0xdf, 0x60, 0x2a, 0x64, 0x75, 0x40, 0x51, 0x04, 0xe2,
	0xa9, 0x43, 0x9e, 0x54, 0x26, 0xd8, 0xd8, 0x98, 0x3a, 0xb8, 0x65, 0x62, 0x40, 0xae, 0x63, 0xa5,
	0x96, 0x88, 0x1d, 0xd9, 0x37, 0x6a, 0xf8, 0x6d, 0xfc, 0x10, 0xfe, 0x0e, 0xb2, 0xe3, 0xb8, 0x65,
	0x60, 0xca, 0x3d, 0x3e, 0xf7, 0x1e, 0x9f, 0x7b, 0x1c, 0xb8, 0x14, 0xc6, 0xca, 0x93, 0x96, 0x4f,
	0x3f, 0x70, 0x39, 0xe1, 0xd2, 0x4d, 0xd6, 0xa0, 0x21, 0x39, 0x2e, 0x57, 0xaf, 0x85, 0x19, 0x47,
	0xa3, 0x4f, 0xeb, 0x67, 0x25, 0xda, 0xef, 0x50, 0x7f, 0x11, 0xa8, 0x8c, 0x66, 0xfc, 0x89, 0x5c,
	0xc1, 0xb9, 0x30, 0x1a, 0x2d, 0x17, 0x48, 0xb3, 0x26, 0x3b, 0xd6, 0x2c, 0x61, 0xf2, 0x16, 0x80,
	0x87, 0xc6, 0x5b, 0x3e, 0x4a, 0x9a, 0x07, 0xf6, 0xc5, 0x09, 0x21, 0x50, 0xf6, 0x1c, 0x39, 0x2d,
	0x02, 0x13, 0xea, 0xf6, 0x4f, 0x06, 0x87, 0x7b, 0xcb, 0xb5, 0xe3, 0xe9, 0x8a, 0x03, 0xe4, 0xaa,
	0x8f, 0xe2, 0xb9, 0xea, 0xfd, 0x18, 0xaa, 0x28, 0x58, 0xb0, 0x50, 0x93, 0x0f, 0x70, 0xb6, 0x0e,
	0x38, 0x5a, 0x34, 0xc5, 0xf1, 0xd5, 0xcd, 0x45, 0x87, 0x4b, 0x97, 0x6c, 0xb2, 0x8d, 0x25, 0x14,
	0xce, 0x9c, 0x1a, 0xb4, 0xb4, 0x8e, 0x96, 0x4d, 0x71, 0xdc, 0xb3, 0x0d, 0x92, 0x6b, 0xd8, 0xf9,
	0xd2, 0xd1, 0x5d, 0x10, 0xb8, 0xec, 0xe2, 0xd2, 0x77, 0x6a, 0xd0, 0x1c, 0x67, 0x2b, 0xbd, 0xce,
	0xda, 0x42, 0x6e, 0xa0, 0x9e, 0xe6, 0x87, 0x9f, 0xca, 0x3d, 0x4a, 0x4b, 0xab, 0x26, 0xfb, 0x6f,
	0xff, 0x73, 0x5b, 0xfb, 0x19, 0x80, 0x49, 0x21, 0xd5, 0x84, 0x7e, 0x29, 0xbf, 0xc4, 0xaf, 0x49,
	0x86, 0xb5, 0x76, 0x2c, 0xd4, 0xde, 0x9b, 0xcf, 0x4e, 0x6a, 0x8c, 0x61, 0x6d, 0xb0, 0xfd, 0x04,
	0xf5, 0x1d, 0x72, 0x9c, 0x5d, 0x1c, 0x15, 0xa6, 0x4f, 0xa3, 0xbe, 0xf6, 0xa3, 0xa3, 0x74, 0x8e,
	0x0f, 0x5b, 0xce, 0x1b, 0x6c, 0x7f, 0x67, 0xb0, 0xbf, 0x5f, 0x5e, 0xdc, 0xfc, 0x06, 0x2a, 0x5c,
	0xbe, 0x72, 0xf7, 0x18, 0x04, 0xf6, 0x2c, 0x22, 0xff, 0x92, 0x03, 0x77, 0xdf, 0x92, 0x46, 0xc9,
	0x12, 0x26, 0xef, 0xa1, 0x72, 0xe1, 0xfe, 0xf0, 0x56, 0x31, 0xdd, 0xe4, 0x88, 0x45, 0x92, 0xbc,
	0x83, 0x0b, 0x37, 0x0b, 0xb1, 0xc6, 0x7e, 0x3b, 0x8f, 0xb4, 0x0c, 0x16, 0xff, 0x3d, 0x24, 0xd7,
	0x70, 0x6e, 0x57, 0x3b, 0x5b, 0xd6, 0x07, 0x2f, 0xf7, 0x6c, 0x91, 0x25, 0xfe, 0xa1, 0x0a, 0xbf,
	0xdc, 0xc7, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x28, 0x3e, 0x5e, 0xaa, 0xa3, 0x02, 0x00, 0x00,
}
