// Code generated by protoc-gen-go. DO NOT EDIT.
// source: block.proto

package block

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BlockHead struct {
	Version              int64    `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	ParentHash           []byte   `protobuf:"bytes,2,opt,name=parentHash,proto3" json:"parentHash,omitempty"`
	TxsHash              []byte   `protobuf:"bytes,3,opt,name=txsHash,proto3" json:"txsHash,omitempty"`
	MerkleHash           []byte   `protobuf:"bytes,4,opt,name=merkleHash,proto3" json:"merkleHash,omitempty"`
	Info                 []byte   `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	Number               int64    `protobuf:"varint,6,opt,name=number,proto3" json:"number,omitempty"`
	Witness              string   `protobuf:"bytes,7,opt,name=witness,proto3" json:"witness,omitempty"`
	Time                 int64    `protobuf:"varint,8,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockHead) Reset()         { *m = BlockHead{} }
func (m *BlockHead) String() string { return proto.CompactTextString(m) }
func (*BlockHead) ProtoMessage()    {}
func (*BlockHead) Descriptor() ([]byte, []int) {
	return fileDescriptor_block_99cd79e5fcae11c5, []int{0}
}
func (m *BlockHead) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockHead.Unmarshal(m, b)
}
func (m *BlockHead) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockHead.Marshal(b, m, deterministic)
}
func (dst *BlockHead) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockHead.Merge(dst, src)
}
func (m *BlockHead) XXX_Size() int {
	return xxx_messageInfo_BlockHead.Size(m)
}
func (m *BlockHead) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockHead.DiscardUnknown(m)
}

var xxx_messageInfo_BlockHead proto.InternalMessageInfo

func (m *BlockHead) GetVersion() int64 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *BlockHead) GetParentHash() []byte {
	if m != nil {
		return m.ParentHash
	}
	return nil
}

func (m *BlockHead) GetTxsHash() []byte {
	if m != nil {
		return m.TxsHash
	}
	return nil
}

func (m *BlockHead) GetMerkleHash() []byte {
	if m != nil {
		return m.MerkleHash
	}
	return nil
}

func (m *BlockHead) GetInfo() []byte {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *BlockHead) GetNumber() int64 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *BlockHead) GetWitness() string {
	if m != nil {
		return m.Witness
	}
	return ""
}

func (m *BlockHead) GetTime() int64 {
	if m != nil {
		return m.Time
	}
	return 0
}

type BlockRaw struct {
	Head                 *BlockHead `protobuf:"bytes,1,opt,name=head,proto3" json:"head,omitempty"`
	Sign                 []byte     `protobuf:"bytes,2,opt,name=sign,proto3" json:"sign,omitempty"`
	Txs                  [][]byte   `protobuf:"bytes,3,rep,name=txs,proto3" json:"txs,omitempty"`
	Receipts             [][]byte   `protobuf:"bytes,4,rep,name=receipts,proto3" json:"receipts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *BlockRaw) Reset()         { *m = BlockRaw{} }
func (m *BlockRaw) String() string { return proto.CompactTextString(m) }
func (*BlockRaw) ProtoMessage()    {}
func (*BlockRaw) Descriptor() ([]byte, []int) {
	return fileDescriptor_block_99cd79e5fcae11c5, []int{1}
}
func (m *BlockRaw) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockRaw.Unmarshal(m, b)
}
func (m *BlockRaw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockRaw.Marshal(b, m, deterministic)
}
func (dst *BlockRaw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockRaw.Merge(dst, src)
}
func (m *BlockRaw) XXX_Size() int {
	return xxx_messageInfo_BlockRaw.Size(m)
}
func (m *BlockRaw) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockRaw.DiscardUnknown(m)
}

var xxx_messageInfo_BlockRaw proto.InternalMessageInfo

func (m *BlockRaw) GetHead() *BlockHead {
	if m != nil {
		return m.Head
	}
	return nil
}

func (m *BlockRaw) GetSign() []byte {
	if m != nil {
		return m.Sign
	}
	return nil
}

func (m *BlockRaw) GetTxs() [][]byte {
	if m != nil {
		return m.Txs
	}
	return nil
}

func (m *BlockRaw) GetReceipts() [][]byte {
	if m != nil {
		return m.Receipts
	}
	return nil
}

func init() {
	proto.RegisterType((*BlockHead)(nil), "block.BlockHead")
	proto.RegisterType((*BlockRaw)(nil), "block.BlockRaw")
}

func init() { proto.RegisterFile("block.proto", fileDescriptor_block_99cd79e5fcae11c5) }

var fileDescriptor_block_99cd79e5fcae11c5 = []byte{
	// 245 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0xb1, 0x6e, 0xc2, 0x30,
	0x10, 0x86, 0xe5, 0x3a, 0x40, 0x38, 0x18, 0xd0, 0x0d, 0xd5, 0xa9, 0x43, 0x15, 0xa1, 0x0e, 0x99,
	0x18, 0xda, 0x37, 0xe8, 0xc4, 0xec, 0x37, 0x70, 0xe0, 0x5a, 0x2c, 0x88, 0x1d, 0xd9, 0x6e, 0xe1,
	0x55, 0xfb, 0x36, 0x95, 0x0f, 0x42, 0xbb, 0xfd, 0xdf, 0xfd, 0xf9, 0x2f, 0xfe, 0x0f, 0x16, 0xdd,
	0x29, 0xec, 0x8e, 0x9b, 0x21, 0x86, 0x1c, 0x70, 0x22, 0xb0, 0xfe, 0x51, 0x30, 0x7f, 0x2f, 0x6a,
	0xcb, 0x76, 0x8f, 0x04, 0xb3, 0x6f, 0x8e, 0xc9, 0x05, 0x4f, 0xaa, 0x51, 0xad, 0x36, 0x23, 0xe2,
	0x33, 0xc0, 0x60, 0x23, 0xfb, 0xbc, 0xb5, 0xe9, 0x40, 0x0f, 0x8d, 0x6a, 0x97, 0xe6, 0xdf, 0xa4,
	0x24, 0xf3, 0x25, 0x89, 0xa9, 0xc5, 0x1c, 0xb1, 0x24, 0x7b, 0x8e, 0xc7, 0x13, 0x8b, 0x59, 0x5d,
	0x93, 0x7f, 0x13, 0x44, 0xa8, 0x9c, 0xff, 0x08, 0x34, 0x11, 0x47, 0x34, 0x3e, 0xc2, 0xd4, 0x7f,
	0xf5, 0x1d, 0x47, 0x9a, 0xca, 0x33, 0x6e, 0x54, 0xfe, 0x72, 0x76, 0xd9, 0x73, 0x4a, 0x34, 0x6b,
	0x54, 0x3b, 0x37, 0x23, 0x96, 0x2d, 0xd9, 0xf5, 0x4c, 0xb5, 0x7c, 0x2f, 0x7a, 0x1d, 0xa1, 0x96,
	0x6a, 0xc6, 0x9e, 0xf1, 0x05, 0xaa, 0x03, 0xdb, 0xbd, 0xd4, 0x5a, 0xbc, 0xae, 0x36, 0xd7, 0x53,
	0xdc, 0x9b, 0x1b, 0x71, 0xcb, 0x96, 0xe4, 0x3e, 0xfd, 0xad, 0x9f, 0x68, 0x5c, 0x81, 0xce, 0x97,
	0x44, 0xba, 0xd1, 0xed, 0xd2, 0x14, 0x89, 0x4f, 0x50, 0x47, 0xde, 0xb1, 0x1b, 0x72, 0xa2, 0x4a,
	0xc6, 0x77, 0xee, 0xa6, 0x72, 0xdd, 0xb7, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0a, 0xeb, 0x42,
	0x47, 0x6c, 0x01, 0x00, 0x00,
}
