// Code generated by protoc-gen-go. DO NOT EDIT.
// source: message.proto

package message

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RequestBlock struct {
	BlockNumber          int64    `protobuf:"varint,1,opt,name=blockNumber,proto3" json:"blockNumber,omitempty"`
	BlockHash            []byte   `protobuf:"bytes,2,opt,name=blockHash,proto3" json:"blockHash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestBlock) Reset()         { *m = RequestBlock{} }
func (m *RequestBlock) String() string { return proto.CompactTextString(m) }
func (*RequestBlock) ProtoMessage()    {}
func (*RequestBlock) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_4010e9811870dde4, []int{0}
}
func (m *RequestBlock) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestBlock.Unmarshal(m, b)
}
func (m *RequestBlock) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestBlock.Marshal(b, m, deterministic)
}
func (dst *RequestBlock) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestBlock.Merge(dst, src)
}
func (m *RequestBlock) XXX_Size() int {
	return xxx_messageInfo_RequestBlock.Size(m)
}
func (m *RequestBlock) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestBlock.DiscardUnknown(m)
}

var xxx_messageInfo_RequestBlock proto.InternalMessageInfo

func (m *RequestBlock) GetBlockNumber() int64 {
	if m != nil {
		return m.BlockNumber
	}
	return 0
}

func (m *RequestBlock) GetBlockHash() []byte {
	if m != nil {
		return m.BlockHash
	}
	return nil
}

type BlockHashQuery struct {
	ReqType              int32    `protobuf:"varint,1,opt,name=reqType,proto3" json:"reqType,omitempty"`
	Start                int64    `protobuf:"varint,2,opt,name=start,proto3" json:"start,omitempty"`
	End                  int64    `protobuf:"varint,3,opt,name=end,proto3" json:"end,omitempty"`
	Nums                 []int64  `protobuf:"varint,4,rep,packed,name=nums,proto3" json:"nums,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockHashQuery) Reset()         { *m = BlockHashQuery{} }
func (m *BlockHashQuery) String() string { return proto.CompactTextString(m) }
func (*BlockHashQuery) ProtoMessage()    {}
func (*BlockHashQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_4010e9811870dde4, []int{1}
}
func (m *BlockHashQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockHashQuery.Unmarshal(m, b)
}
func (m *BlockHashQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockHashQuery.Marshal(b, m, deterministic)
}
func (dst *BlockHashQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockHashQuery.Merge(dst, src)
}
func (m *BlockHashQuery) XXX_Size() int {
	return xxx_messageInfo_BlockHashQuery.Size(m)
}
func (m *BlockHashQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockHashQuery.DiscardUnknown(m)
}

var xxx_messageInfo_BlockHashQuery proto.InternalMessageInfo

func (m *BlockHashQuery) GetReqType() int32 {
	if m != nil {
		return m.ReqType
	}
	return 0
}

func (m *BlockHashQuery) GetStart() int64 {
	if m != nil {
		return m.Start
	}
	return 0
}

func (m *BlockHashQuery) GetEnd() int64 {
	if m != nil {
		return m.End
	}
	return 0
}

func (m *BlockHashQuery) GetNums() []int64 {
	if m != nil {
		return m.Nums
	}
	return nil
}

type BlockHash struct {
	Height               int64    `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Hash                 []byte   `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlockHash) Reset()         { *m = BlockHash{} }
func (m *BlockHash) String() string { return proto.CompactTextString(m) }
func (*BlockHash) ProtoMessage()    {}
func (*BlockHash) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_4010e9811870dde4, []int{2}
}
func (m *BlockHash) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockHash.Unmarshal(m, b)
}
func (m *BlockHash) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockHash.Marshal(b, m, deterministic)
}
func (dst *BlockHash) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockHash.Merge(dst, src)
}
func (m *BlockHash) XXX_Size() int {
	return xxx_messageInfo_BlockHash.Size(m)
}
func (m *BlockHash) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockHash.DiscardUnknown(m)
}

var xxx_messageInfo_BlockHash proto.InternalMessageInfo

func (m *BlockHash) GetHeight() int64 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *BlockHash) GetHash() []byte {
	if m != nil {
		return m.Hash
	}
	return nil
}

type BlockHashResponse struct {
	BlockHashes          []*BlockHash `protobuf:"bytes,1,rep,name=blockHashes,proto3" json:"blockHashes,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *BlockHashResponse) Reset()         { *m = BlockHashResponse{} }
func (m *BlockHashResponse) String() string { return proto.CompactTextString(m) }
func (*BlockHashResponse) ProtoMessage()    {}
func (*BlockHashResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_message_4010e9811870dde4, []int{3}
}
func (m *BlockHashResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlockHashResponse.Unmarshal(m, b)
}
func (m *BlockHashResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlockHashResponse.Marshal(b, m, deterministic)
}
func (dst *BlockHashResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlockHashResponse.Merge(dst, src)
}
func (m *BlockHashResponse) XXX_Size() int {
	return xxx_messageInfo_BlockHashResponse.Size(m)
}
func (m *BlockHashResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_BlockHashResponse.DiscardUnknown(m)
}

var xxx_messageInfo_BlockHashResponse proto.InternalMessageInfo

func (m *BlockHashResponse) GetBlockHashes() []*BlockHash {
	if m != nil {
		return m.BlockHashes
	}
	return nil
}

func init() {
	proto.RegisterType((*RequestBlock)(nil), "message.RequestBlock")
	proto.RegisterType((*BlockHashQuery)(nil), "message.BlockHashQuery")
	proto.RegisterType((*BlockHash)(nil), "message.BlockHash")
	proto.RegisterType((*BlockHashResponse)(nil), "message.BlockHashResponse")
}

func init() { proto.RegisterFile("message.proto", fileDescriptor_message_4010e9811870dde4) }

var fileDescriptor_message_4010e9811870dde4 = []byte{
	// 233 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x4c, 0x90, 0x3f, 0x4f, 0xc3, 0x30,
	0x10, 0xc5, 0x15, 0xdc, 0x3f, 0xea, 0xb5, 0x20, 0x38, 0x21, 0xe4, 0x81, 0xc1, 0xca, 0x94, 0xa9,
	0x03, 0x20, 0xb1, 0x77, 0x82, 0xa5, 0x12, 0x16, 0x5f, 0x20, 0x81, 0xa3, 0x46, 0x90, 0x38, 0xf5,
	0xd9, 0x43, 0xbf, 0x3d, 0xb2, 0x71, 0x9a, 0x6c, 0xef, 0xf7, 0xe4, 0x77, 0xbe, 0x7b, 0x70, 0xd9,
	0x12, 0x73, 0x7d, 0xa0, 0x6d, 0xef, 0xac, 0xb7, 0xb8, 0xcc, 0x58, 0xee, 0x61, 0xa3, 0xe9, 0x18,
	0x88, 0xfd, 0xee, 0xd7, 0x7e, 0xfc, 0xa0, 0x82, 0x75, 0x13, 0xc5, 0x3e, 0xb4, 0x0d, 0x39, 0x59,
	0xa8, 0xa2, 0x12, 0x7a, 0x6a, 0xe1, 0x3d, 0xac, 0x12, 0xbe, 0xd4, 0x6c, 0xe4, 0x85, 0x2a, 0xaa,
	0x8d, 0x1e, 0x8d, 0xf2, 0x0b, 0xae, 0x76, 0x03, 0xbc, 0x05, 0x72, 0x27, 0x94, 0xb0, 0x74, 0x74,
	0x7c, 0x3f, 0xf5, 0x94, 0xa6, 0xcd, 0xf5, 0x80, 0x78, 0x0b, 0x73, 0xf6, 0xb5, 0xf3, 0x69, 0x8a,
	0xd0, 0xff, 0x80, 0xd7, 0x20, 0xa8, 0xfb, 0x94, 0x22, 0x79, 0x51, 0x22, 0xc2, 0xac, 0x0b, 0x2d,
	0xcb, 0x99, 0x12, 0x95, 0xd0, 0x49, 0x97, 0xcf, 0xb0, 0x3a, 0xff, 0x83, 0x77, 0xb0, 0x30, 0xf4,
	0x7d, 0x30, 0x3e, 0xef, 0x9b, 0x29, 0x06, 0xcd, 0xb8, 0x65, 0xd2, 0xe5, 0x2b, 0xdc, 0x9c, 0x83,
	0x9a, 0xb8, 0xb7, 0x1d, 0x13, 0x3e, 0xe5, 0xab, 0xa3, 0x49, 0x2c, 0x0b, 0x25, 0xaa, 0xf5, 0x03,
	0x6e, 0x87, 0xce, 0xc6, 0xc0, 0xf4, 0x59, 0xb3, 0x48, 0x5d, 0x3e, 0xfe, 0x05, 0x00, 0x00, 0xff,
	0xff, 0x16, 0x9f, 0x03, 0xac, 0x5c, 0x01, 0x00, 0x00,
}
