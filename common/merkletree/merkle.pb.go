// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test.proto

package merkletree

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MerkleTree struct {
	HashList             [][]byte         `protobuf:"bytes,1,rep,name=hash_list,json=hashList,proto3" json:"hash_list,omitempty"`
	Hash2Idx             map[string]int32 `protobuf:"bytes,2,rep,name=hash2_idx,json=hash2Idx,proto3" json:"hash2_idx,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	LeafNum              int32            `protobuf:"varint,3,opt,name=leaf_num,json=leafNum,proto3" json:"leaf_num,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *MerkleTree) Reset()         { *m = MerkleTree{} }
func (m *MerkleTree) String() string { return proto.CompactTextString(m) }
func (*MerkleTree) ProtoMessage()    {}
func (*MerkleTree) Descriptor() ([]byte, []int) {
	return fileDescriptor_test_20431ed6d96e249a, []int{0}
}
func (m *MerkleTree) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerkleTree.Unmarshal(m, b)
}
func (m *MerkleTree) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerkleTree.Marshal(b, m, deterministic)
}
func (dst *MerkleTree) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerkleTree.Merge(dst, src)
}
func (m *MerkleTree) XXX_Size() int {
	return xxx_messageInfo_MerkleTree.Size(m)
}
func (m *MerkleTree) XXX_DiscardUnknown() {
	xxx_messageInfo_MerkleTree.DiscardUnknown(m)
}

var xxx_messageInfo_MerkleTree proto.InternalMessageInfo

func (m *MerkleTree) GetHashList() [][]byte {
	if m != nil {
		return m.HashList
	}
	return nil
}

func (m *MerkleTree) GetHash2Idx() map[string]int32 {
	if m != nil {
		return m.Hash2Idx
	}
	return nil
}

func (m *MerkleTree) GetLeafNum() int32 {
	if m != nil {
		return m.LeafNum
	}
	return 0
}

func init() {
	proto.RegisterType((*MerkleTree)(nil), "merkletree.MerkleTree")
	proto.RegisterMapType((map[string]int32)(nil), "merkletree.MerkleTree.Hash2IdxEntry")
}

func init() { proto.RegisterFile("test.proto", fileDescriptor_test_20431ed6d96e249a) }

var fileDescriptor_test_20431ed6d96e249a = []byte{
	// 196 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0x49, 0x2d, 0x2e,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0xca, 0x4d, 0x2d, 0xca, 0xce, 0x49, 0x2d, 0x29,
	0x4a, 0x4d, 0x55, 0x3a, 0xc2, 0xc8, 0xc5, 0xe5, 0x0b, 0xe6, 0x86, 0x14, 0xa5, 0xa6, 0x0a, 0x49,
	0x73, 0x71, 0x66, 0x24, 0x16, 0x67, 0xc4, 0xe7, 0x64, 0x16, 0x97, 0x48, 0x30, 0x2a, 0x30, 0x6b,
	0xf0, 0x04, 0x71, 0x80, 0x04, 0x7c, 0x32, 0x8b, 0x4b, 0x84, 0x1c, 0x21, 0x92, 0x46, 0xf1, 0x99,
	0x29, 0x15, 0x12, 0x4c, 0x0a, 0xcc, 0x1a, 0xdc, 0x46, 0x2a, 0x7a, 0x08, 0xb3, 0xf4, 0x10, 0xe6,
	0xe8, 0x79, 0x80, 0xd4, 0x79, 0xa6, 0x54, 0xb8, 0xe6, 0x95, 0x14, 0x55, 0x42, 0x8c, 0x00, 0x71,
	0x85, 0x24, 0xb9, 0x38, 0x72, 0x52, 0x13, 0xd3, 0xe2, 0xf3, 0x4a, 0x73, 0x25, 0x98, 0x15, 0x18,
	0x35, 0x58, 0x83, 0xd8, 0x41, 0x7c, 0xbf, 0xd2, 0x5c, 0x29, 0x6b, 0x2e, 0x5e, 0x14, 0x5d, 0x42,
	0x02, 0x5c, 0xcc, 0xd9, 0xa9, 0x95, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x20, 0xa6, 0x90,
	0x08, 0x17, 0x6b, 0x59, 0x62, 0x4e, 0x69, 0xaa, 0x04, 0x13, 0x58, 0x2b, 0x84, 0x63, 0xc5, 0x64,
	0xc1, 0x98, 0xc4, 0x06, 0xf6, 0x99, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0x4f, 0xf1, 0x51, 0xa1,
	0xe7, 0x00, 0x00, 0x00,
}
