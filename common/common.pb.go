// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common.proto

package tx

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SignatureRaw struct {
	Algorithm            int32    `protobuf:"varint,1,opt,name=algorithm,proto3" json:"algorithm,omitempty"`
	Sig                  []byte   `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`
	PubKey               []byte   `protobuf:"bytes,3,opt,name=pubKey,proto3" json:"pubKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SignatureRaw) Reset()         { *m = SignatureRaw{} }
func (m *SignatureRaw) String() string { return proto.CompactTextString(m) }
func (*SignatureRaw) ProtoMessage()    {}
func (*SignatureRaw) Descriptor() ([]byte, []int) {
	return fileDescriptor_common_0a42a1ae781e89dc, []int{0}
}
func (m *SignatureRaw) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SignatureRaw.Unmarshal(m, b)
}
func (m *SignatureRaw) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SignatureRaw.Marshal(b, m, deterministic)
}
func (dst *SignatureRaw) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SignatureRaw.Merge(dst, src)
}
func (m *SignatureRaw) XXX_Size() int {
	return xxx_messageInfo_SignatureRaw.Size(m)
}
func (m *SignatureRaw) XXX_DiscardUnknown() {
	xxx_messageInfo_SignatureRaw.DiscardUnknown(m)
}

var xxx_messageInfo_SignatureRaw proto.InternalMessageInfo

func (m *SignatureRaw) GetAlgorithm() int32 {
	if m != nil {
		return m.Algorithm
	}
	return 0
}

func (m *SignatureRaw) GetSig() []byte {
	if m != nil {
		return m.Sig
	}
	return nil
}

func (m *SignatureRaw) GetPubKey() []byte {
	if m != nil {
		return m.PubKey
	}
	return nil
}

func init() {
	proto.RegisterType((*SignatureRaw)(nil), "tx.SignatureRaw")
}

func init() { proto.RegisterFile("common.proto", fileDescriptor_common_0a42a1ae781e89dc) }

var fileDescriptor_common_0a42a1ae781e89dc = []byte{
	// 116 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x49, 0xce, 0xcf, 0xcd,
	0xcd, 0xcf, 0xd3, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0xa9, 0x50, 0x0a, 0xe3, 0xe2,
	0x09, 0xce, 0x4c, 0xcf, 0x4b, 0x2c, 0x29, 0x2d, 0x4a, 0x0d, 0x4a, 0x2c, 0x17, 0x92, 0xe1, 0xe2,
	0x4c, 0xcc, 0x49, 0xcf, 0x2f, 0xca, 0x2c, 0xc9, 0xc8, 0x95, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0d,
	0x42, 0x08, 0x08, 0x09, 0x70, 0x31, 0x17, 0x67, 0xa6, 0x4b, 0x30, 0x29, 0x30, 0x6a, 0xf0, 0x04,
	0x81, 0x98, 0x42, 0x62, 0x5c, 0x6c, 0x05, 0xa5, 0x49, 0xde, 0xa9, 0x95, 0x12, 0xcc, 0x60, 0x41,
	0x28, 0x2f, 0x89, 0x0d, 0x6c, 0x85, 0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xf9, 0x75, 0xb7, 0xc4,
	0x72, 0x00, 0x00, 0x00,
}
